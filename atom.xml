<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HXY</title>
  
  
  <link href="https://huxiuyuan/atom.xml" rel="self"/>
  
  <link href="https://huxiuyuan/"/>
  <updated>2022-03-19T19:41:06.953Z</updated>
  <id>https://huxiuyuan/</id>
  
  <author>
    <name>Hu XiuYuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker</title>
    <link href="https://huxiuyuan/2022/03/20/docker/"/>
    <id>https://huxiuyuan/2022/03/20/docker/</id>
    <published>2022-03-19T19:41:06.953Z</published>
    <updated>2022-03-19T19:41:06.953Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><blockquote><p>Docker是一个快速交付应用、运行应用的技术</p></blockquote><p>项目部署的问题</p><p>大型项目组件较多，运行环境也较为复杂，部署时会遇到一些问题：</p><ul><li>依赖关系复杂，容易出现兼容性问题</li><li>开发，测试，生产环境有差异</li></ul><h2 id="Docker如何解决依赖的兼容性问题？"><a href="#Docker如何解决依赖的兼容性问题？" class="headerlink" title="Docker如何解决依赖的兼容性问题？"></a>Docker如何解决依赖的兼容性问题？</h2><ul><li>Ubuntn和CentOS都是基于Liunx内核，只是系统应用不同，提供的函数库有差异</li></ul><p><img src="https://cdn.jsdelivr.net/gh/huxiuyuan/java-learn/202112242102916.png" alt="image-20211224210226739"></p><blockquote><ul><li>Docker将用户程序与所需要调用的系统(比如Ubuntn)函数库一起打包</li><li>Docker运行到不同操作系统时，直接基于打包的库函数，借助于操作系统的Linux内核来运行</li></ul></blockquote><p>Docker如何解决大型项目依赖关系复杂，不同组件依赖的兼容性问题？</p><ul><li>Docker允许开发中将应用、依赖、函数库、配置一起<strong>打包</strong>，形成可移植镜像</li><li>Docker应用运行在容器中，使用沙箱机制，相互<strong>隔离</strong></li></ul><p>Docker如何解决开发、测试、生产环境有差异的问题？</p><ul><li>Docker镜像中包含完整运行环境，包括系统函数库，仅依赖系统的Linux内核，因此可以在任意Linux操作系统上运行</li></ul><h2 id="Docker与虚拟机"><a href="#Docker与虚拟机" class="headerlink" title="Docker与虚拟机"></a>Docker与虚拟机</h2><p><img src="https://cdn.jsdelivr.net/gh/huxiuyuan/java-learn/202112242113120.png" alt="image-20211224211342994"></p><p>Docker和虚拟机的差异：</p><blockquote><ul><li>docker是一个系统进程，虚拟机是在操作系统中的操作系统。</li><li>docker体积小、启动速度快、性能好；虚拟机体积大、启动速度慢、性能一般。</li></ul></blockquote><h2 id="镜像和容器"><a href="#镜像和容器" class="headerlink" title="镜像和容器"></a>镜像和容器</h2><blockquote><p>镜像（image）：Docker将应用程序及其所需的依赖、函数库、环境、配置等文件打包在一起，成为镜像。</p><p>容器（Container）：镜像中的应用程序运行后形成的进程就是容器，只    是Docker会给容器做隔离，对外不可见</p></blockquote><h2 id="Docker和DockerHub"><a href="#Docker和DockerHub" class="headerlink" title="Docker和DockerHub"></a>Docker和DockerHub</h2><ul><li>DockerHub：DockerHub是一个Docker镜像的托管平台。这样的平台称为Docker Registry。</li><li>国内也有类似于DockerHub的公开服务，比如网易云镜像服务、阿里云镜像服务</li></ul><h2 id="Docker架构"><a href="#Docker架构" class="headerlink" title="Docker架构"></a>Docker架构</h2><ul><li><p>Docker是一个CS架构的程序，由两部分组成：</p><ol><li><p>服务端（server）：Docker守护进程，负责处理Docker指令，管理镜像、容器等</p></li><li><p>客户端（client）：通过命令或RestAPI向Docker服务端发送指令。可以在本地或远程向服务端发送指令。</p><p><img src="https://cdn.jsdelivr.net/gh/huxiuyuan/java-learn/202112242125466.png" alt="image-20211224212532354"></p></li></ol></li></ul><h2 id="Docker数据卷"><a href="#Docker数据卷" class="headerlink" title="Docker数据卷"></a>Docker数据卷</h2><ul><li><blockquote><p>数据卷（volume）：是一个虚拟目录，指向宿主机文件系统中的某个目录</p></blockquote></li></ul><p>docker容器内部配置对外不可见，容器删除后配置随之删除，造成了</p><ol><li>不便于修改，要进入容器内部进行修改</li><li>数据不可复用：在容器内的修改对外是不可见的。所有修改对新创建的容器不可复用</li><li>升级维护困难：数据在容器内，如果要升级容器必然删除旧容器，所有数据都跟着删除了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/huxiuyuan/java-learn/202112271509737.png" alt="image-20211227150906606"></p><ul><li>数据卷的作用<ol><li>将容器与数据分离，解耦合，方便操作容器内数据，保证数据安全</li></ol></li></ul><h2 id="挂载数据卷"><a href="#挂载数据卷" class="headerlink" title="挂载数据卷"></a>挂载数据卷</h2><p>我们在创建容器时，可以通过 -v 参数来挂在一个数据卷到某个容器目录</p><p><img src="https://cdn.jsdelivr.net/gh/huxiuyuan/java-learn/202112271517486.png" alt="image-20211227151759434"></p>]]></content>
    
    
    <summary type="html">Docker介绍</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://huxiuyuan/2022/03/19/hello-world/"/>
    <id>https://huxiuyuan/2022/03/19/hello-world/</id>
    <published>2022-03-18T17:34:43.135Z</published>
    <updated>2022-03-19T07:23:16.906Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="创建一篇新文章"><a href="#创建一篇新文章" class="headerlink" title="创建一篇新文章"></a>创建一篇新文章</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="启动Hexo本地服务"><a href="#启动Hexo本地服务" class="headerlink" title="启动Hexo本地服务"></a>启动Hexo本地服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">访问localhost:4000访问本地服务</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="将博客推送到github上"><a href="#将博客推送到github上" class="headerlink" title="将博客推送到github上"></a>将博客推送到github上</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Hexo 基本命令</summary>
    
    
    
    
  </entry>
  
</feed>
